<aside>
    <div class="sidebar">
        <div class="sidebar-container">
            {% for imp in dynamics.sidebar.top %}
                {% include imp %}
            {% endfor %}
            {% if settings.dgShowLocalGraph === true %}
                {% include "components/graphScript.njk" %}
            {% endif %}

            {% if settings.dgShowToc === false %}
                <div class="toc">
                    <div class="toc-title-container">
                        <div class="toc-title">
                            🗺️ 本页面包含的内容：
                        </div>
                    </div>
                    <div class="toc-container">
                        <ul id="toc-list"></ul>
                    </div>
                </div>
            {% endif %}

            {% if settings.dgShowBacklinks === true %}
                <div class="backlinks">
                    <div class="backlink-title" style="margin: 4px 0 !important;">Pages mentioning this page</div>
                    <div class="backlink-list">
                        {% if page.url == "/" %}
                            {% if graph.nodes[graph.homeAlias].backLinks.length === 0 %}
                                <div class="backlink-card">
                                    <span class="no-backlinks-message">No other pages mention this page</span>
                                </div>
                            {% endif %}
                        {% for backlink in graph.nodes[graph.homeAlias].backLinks %}
                            {% if graph.nodes[backlink].url != graph.homeAlias %}
                                <div class="backlink-card">
                                    {% if not meta.noteIconsSettings.backlinks %}<i icon-name="link"></i> {% endif %}<a href="{{graph.nodes[backlink].url}}" data-note-icon="{{graph.nodes[backlink].noteIcon}}" class="backlink">{{graph.nodes[backlink].title}}</a>
                                </div>
                            {% endif %}
                        {% endfor %}
                        {% else %}
                            {% if graph.nodes[page.url].backLinks.length === 0 %}
                                <div class="backlink-card">
                                    <span class="no-backlinks-message">No other pages mention this page</span>
                                </div>
                            {% endif %}
                        {% for backlink in graph.nodes[page.url].backLinks %}
                            {% if graph.nodes[backlink].url != page.url %}
                                <div class="backlink-card">
                                    {% if not meta.noteIconsSettings.backlinks %}<i icon-name="link"></i> {% endif %}<a href="{{graph.nodes[backlink].url}}" data-note-icon="{{graph.nodes[backlink].noteIcon}}" class="backlink">{{graph.nodes[backlink].title}}</a>
                                </div>
                            {% endif %}
                        {% endfor %}
                        {% endif %}
                    </div>
                </div>
            {% endif %}
            {% for imp in dynamics.sidebar.bottom %}
                {% include imp %}
            {% endfor %}
        </div>
    </div>
</aside>

<script>
// 创建TOC的JavaScript逻辑
document.addEventListener('DOMContentLoaded', function() {
    const tocList = document.getElementById('toc-list');
    const headers = document.querySelectorAll('main h2, main h3, main h4'); // 选取所有 main 内的 h1, h2, h3, h4
    const stack = []; // 用于管理层级结构

    headers.forEach(function(header) {
        const title = header.innerText;
        const id = encodeURIComponent(title) // 编码整个标题
            .replace(/%20/g, '-')          // 替换 %20 为 -
            .replace(/[^\w-]+/g, '');      // 移除无效字符

        header.setAttribute('id', id); // 设置锚点 ID

        const listItem = document.createElement('li');
        listItem.innerHTML = `<a href="#${id}">${title}</a>`;

        const level = parseInt(header.tagName[1]); // 获取标题的级别（1, 2, 3, 4）

        while (stack.length && stack[stack.length - 1].level >= level) {
            stack.pop(); // 弹出比当前级别高或相等的层级
        }

        if (stack.length === 0) {
            tocList.appendChild(listItem); // 在最顶层添加
            stack.push({ level, ul: tocList }); // 记录当前级别
        } else {
            let parentUl = stack[stack.length - 1].ul;
            let childUl = parentUl.querySelector('ul');
            if (!childUl) {
                childUl = document.createElement('ul'); // 创建子级列表
                parentUl.appendChild(childUl);
            }
            childUl.appendChild(listItem); // 添加到子级列表
            stack.push({ level, ul: childUl }); // 更新stack以记录当前子级
        }
    });
});
</script>
