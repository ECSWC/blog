<aside>
    <div class="sidebar">
        <div class="sidebar-container">
            {% for imp in dynamics.sidebar.top %}
                {% include imp %}
            {% endfor %}
            <!-- 此处为…原思维导图代码… -->

            {% if settings.dgShowToc === true %}
                {% set tocHtml = [] %}  <!-- 初始化一个空列表来存储 TOC 的 HTML -->
                {% for heading in content|find_headings %}  <!-- 假设 find_headings 是一个能获得所有标题的过滤器 -->
                    {% set level = heading.level %}
                    {% set title = heading.title %}
                    {% set id = heading.id %}
                    
                    {% if level == 2 %}
                        {% set tocHtml = tocHtml|merge([ '<li><h2><a href="#' ~ id ~ '">' ~ title ~ '</a></h2></li>']) %}
                    {% elif level == 3 %}
                        {% set tocHtml = tocHtml|merge([ '<li style="margin-left: 20px;"><h3><a href="#' ~ id ~ '">' ~ title ~ '</a></h3></li>']) %}
                    {% elif level == 4 %}
                        {% set tocHtml = tocHtml|merge([ '<li style="margin-left: 40px;"><h4><a href="#' ~ id ~ '">' ~ title ~ '</a></h4></li>']) %}
                    {% endif %}
                {% endfor %}
                {% if tocHtml %}
                    <div class="toc">
                        <div class="toc-title-container">
                            <div class="toc-title">
                                On this page
                            </div>
                        </div>
                        <div class="toc-container">
                            <ul>
                                {{ tocHtml|join('')|safe }}  <!-- 使用 join 将列表转换为 HTML 字符串 -->
                            </ul>
                        </div>
                    </div>
                {% endif %}
            {% endif %}

            <!-- 此处为…原反链代码… -->
            {% for imp in dynamics.sidebar.bottom %}
                {% include imp %}
            {% endfor %}
        </div>
    </div>
</aside>

<style>
    .sidebar {
        position: fixed;           /* 固定定位 */
        right: 0;                 /* 靠右对齐 */
        top: 20%;                 /* 与顶部偏移 20% */
        width: 100px;             /* 设置宽度 */
        max-height: 50%;          /* 最大高度 */
        overflow-y: auto;         /* 允许纵向滚动 */
        background: rgba(255, 255, 255, 0.9); /* 半透明背景 */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* 阴影效果 */
        border-radius: 8px;       /* 圆角边框 */
        z-index: 1000;            /* 确保在顶部 */
    }

    .toc {
        padding: 15px;            /* 内边距 */
    }

    .toc-title-container {
        margin-bottom: 10px;      /* 底部间距 */
    }

    .toc-title {
        font-weight: bold;        /* 加粗标题 */
        font-size: 1.2em;         /* 字体大小 */
    }

    .toc a {
        text-decoration: none;     /* 去掉下划线 */
        color: black;             /* 链接颜色 */
        display: block;           /* 块级显示，便于点击 */
        overflow: hidden;         /* 隐藏溢出文本 */
        white-space: nowrap;      /* 不换行 */
        text-overflow: ellipsis;  /* 溢出文本省略 */
    }

    .toc a:hover {
        background-color: #f0f0f0; /* 鼠标悬浮背景 */
    }

    .toc-container h2,
    .toc-container h3,
    .toc-container h4 {
        margin: 5px 0;           /* 间距 */
    }

</style>

