<aside>
    <div class="toc" id="toc-container">
        <div class="toc-title-container">
            <div class="toc-title">
                🗺️ 本页面包含的内容：
            </div>
        </div>
        <div class="toc-container">
            <ul id="toc-list"></ul>
        </div>
    </div>
</aside>

<button class="toc-button" id="toggle-toc">
    <div>🗺️</div>
    <div style="font-size: 12px;">显示本页目录</div>
</button>

<script>
// 创建TOC的JavaScript逻辑
document.addEventListener('DOMContentLoaded', function() {
    const tocList = document.getElementById('toc-list');
    const tocContainer = document.getElementById('toc-container');
    const toggleButton = document.getElementById('toggle-toc');
    
    // 只选择带类的 h2, h3, h4
    const headers = document.querySelectorAll('main h2[class], main h3[class], main h4[class]'); 

    // 创建 TOC 条目
    headers.forEach(function(header) {
        const title = header.innerText;
        const id = encodeURIComponent(title)
            .replace(/%20/g, '-')          // 替换 %20 为 -
            .replace(/[^\w-]+/g, '');      // 移除无效字符

        header.setAttribute('id', id); // 设置锚点 ID

        const level = header.tagName.toLowerCase(); // 获取标题级别
        const listItem = document.createElement('li');

        listItem.innerHTML = `<a href="#${id}">⤷ ${title}</a>`; // 使用 ⤷ 符号，保持 # 锚点链接

        // 检查标题的级别并嵌套
        if (level === 'h3') {
            const parent = tocList.querySelector(`li:has(a[href="#${id.split('-')[0]}"])`);
            if (parent) {
                let sublist = parent.querySelector('ul');
                if (!sublist) {
                    sublist = document.createElement('ul');
                    parent.appendChild(sublist);
                }
                sublist.appendChild(listItem);
            } else {
                tocList.appendChild(listItem);
            }
        } else if (level === 'h4') {
            const parent = tocList.querySelector(`li:has(a[href="#${id.split('-')[0]}"])`);
            const grandparent = tocList.querySelector(`ul li:has(ul) a[href="#${id.split('-')[0]}"]`);
            if (parent || grandparent) {
                const sublist = grandparent ? grandparent.parentElement : parent.querySelector('ul');
                if (sublist) {
                    sublist.appendChild(listItem);
                } else {
                    const newSublist = document.createElement('ul');
                    parent.appendChild(newSublist);
                    newSublist.appendChild(listItem);
                }
            } else {
                tocList.appendChild(listItem);
            }
        } else {
            tocList.appendChild(listItem);
        }
    });

    // 切换 TOC 的显示和隐藏
    toggleButton.addEventListener('click', function() {
        if (tocContainer.style.display === "none" || tocContainer.style.display === "") {
            tocContainer.style.display = "block"; // 展开 TOC
            toggleButton.querySelector('div:last-child').innerText = "隐藏 TOC"; // 修改按钮文本
        } else {
            tocContainer.style.display = "none"; // 隐藏 TOC
            toggleButton.querySelector('div:last-child').innerText = "点击显示 TOC"; // 修改按钮文本
        }
    });
});
</script>

