
    <style>
        .sidebar {
            position: fixed;
            right: 0;
            top: 20%;
            width: 100px;
            max-height: 50%;
            overflow-y: auto;
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            z-index: 1000;
            padding: 15px;
        }

        .toc a {
            text-decoration: none;
            color: black;
        }

        .toc a:hover {
            text-decoration: underline;
        }
    </style>
    
    <script>
        // 定义查找标题的函数
        function findHeadings(content) {
            const headingRegex = /<h([2-4])>(.*?)<\/h\1>/g;
            const headings = [];
            let match;

            while ((match = headingRegex.exec(content)) !== null) {
                headings.push({
                    level: parseInt(match[1], 10),
                    title: match[2],
                    id: match[2].replace(/\s+/g, '-').toLowerCase() // 转为 ID
                });
            }

            return headings;
        }

        // 创建并显示目录
        function generateTOC() {
            const content = document.getElementById('content').innerHTML;
            const headings = findHeadings(content);
            const tocContainer = document.getElementById('toc');
            let tocHtml = '<h2>目录</h2><ul>';

            headings.forEach(entry => {
                tocHtml += `<li style="margin-left: ${entry.level * 20}px;"><a href="#${entry.id}">${entry.title}</a></li>`;
            });

            tocHtml += '</ul>';
            tocContainer.innerHTML = tocHtml;
        }

        window.onload = generateTOC; // 在窗口加载时生成目录
    </script>
    <aside class="sidebar" id="toc">
        <!-- TOC 将在此处生成 -->
    </aside>
