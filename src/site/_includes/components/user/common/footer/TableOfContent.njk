<aside>
    <div class="toc" id="toc-container">
        <div class="toc-title-container">
            <div class="toc-title">
                🗺️ 本页面包含的内容：
            </div>
        </div>
        <div class="toc-container">
            <ul id="toc-list"></ul>
        </div>
    </div>
</aside>

<button class="toc-button" id="toggle-toc">显示 TOC</button>

<script>
// 创建TOC的JavaScript逻辑
document.addEventListener('DOMContentLoaded', function() {
    const tocList = document.getElementById('toc-list');
    const tocContainer = document.getElementById('toc-container');
    const toggleButton = document.getElementById('toggle-toc');
    const headers = document.querySelectorAll('main h2, main h3, main h4'); // 选取所有 main 内的 h2, h3, h4

    // 创建 TOC 条目
    headers.forEach(function(header) {
        const title = header.innerText;
        const id = encodeURIComponent(title) // 编码整个标题
            .replace(/%20/g, '-')          // 替换 %20 为 -
            .replace(/[^\w-]+/g, '');      // 移除无效字符

        header.setAttribute('id', id); // 设置锚点 ID

        const listItem = document.createElement('li');
        listItem.innerHTML = `<a href="javascript:void(0);" onclick="scrollToTarget('${id}')">⤷ ${title}</a>`; // 使用 ⤷ 符号

        tocList.appendChild(listItem); // 添加到 TOC
    });

    // 切换 TOC 的显示和隐藏
    toggleButton.addEventListener('click', function() {
        if (tocContainer.style.display === "none" || tocContainer.style.display === "") {
            tocContainer.style.display = "block"; // 展开 TOC
            toggleButton.innerText = "隐藏 TOC"; // 修改按钮文本
        } else {
            tocContainer.style.display = "none"; // 隐藏 TOC
            toggleButton.innerText = "显示 TOC"; // 修改按钮文本
        }
    });
});

// 创建滚动函数
function scrollToTarget(id) {
    const targetElement = document.getElementById(id); // 获取目标元素
    if (targetElement) {
        const offset = 70; // 顶部偏移量
        const elementPosition = targetElement.getBoundingClientRect().top + window.scrollY;
        const offsetPosition = elementPosition - offset; // 计算滚动位置

        window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth' // 平滑滚动
        });
    }
}
</script>

